# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
requires =
	tox>=4
env_list = lint, integration

[testenv]
setenv =
	name=charmed-spark
    test-name=test-charmed-spark
	registry_namespace=ghcr.io/canonical
passenv =
    USER

[testenv:lint]
description = run linters
skip_install = true
deps =
	yamllint
commands = 
	yamllint -d "{extends: relaxed, rules: {line-length: {max: 200}}}" --no-warnings rockcraft.yaml

[testenv:integration]
description = run operator integration tests
skip_install = true
allowlist_externals =
	tox
	bash
    sg
    sh
commands = 
	bash -ec 'if ! [ -f {env:name}_$(yq .version rockcraft.yaml)_amd64.rock ]; \
		then rockcraft pack; fi'

    # ==========
	# Workaround
    # ==========
    # bash -ec 'microk8s ctr image import {env:name}_$(yq .version rockcraft.yaml)_amd64.rock --base-name {env:registry_namespace}/{env:test-name}'
    # ==========
	bash -ec 'skopeo --insecure-policy copy oci-archive:"{env:name}_$(yq .version rockcraft.yaml)_amd64.rock" docker-daemon:"history:latest"'
	bash -ec 'docker build - -t "{env:registry_namespace}/{env:test-name}-jobs:$(yq .version rockcraft.yaml)" < Dockerfile'
	bash -ec 'docker tag history:latest "{env:registry_namespace}/{env:test-name}-history:$(yq .version rockcraft.yaml)"'
	bash -ec 'docker rmi history:latest'
	bash -ec 'docker save {env:registry_namespace}/{env:test-name}-history > /tmp/tmp.tar'
    bash -ec 'microk8s ctr image import - --base-name {env:registry_namespace}/{env:test-name}-history:$(yq .version rockcraft.yaml) < /tmp/tmp.tar'
	bash -ec 'docker save {env:registry_namespace}/{env:test-name}-jobs > /tmp/tmp.tar'
    bash -ec 'microk8s ctr image import - --base-name {env:registry_namespace}/{env:test-name}-jobs:$(yq .version rockcraft.yaml) < /tmp/tmp.tar'
    # ==========

    # bash {toxinidir}/tests/integration/integration-tests.sh