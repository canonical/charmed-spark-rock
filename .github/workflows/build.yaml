name: Build ROCK

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install yamllint
        run: python3 -m pip install yamllint
      - name: YAML Lint
        run:  |
          yamllint -d "{extends: relaxed, rules: {line-length: {max: 200}}}" \
            --no-warnings rockcraft.yaml

  build:
    runs-on: [self-hosted, linux, X64, jammy, xlarge]
    timeout-minutes: 30
    needs:
      - lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Install dependencies
        run: |
          sudo snap install docker
          sudo addgroup --system docker; sudo adduser $USER docker
          newgrp docker
          sudo snap disable docker; sudo snap enable docker

          sudo snap install yq
          sudo snap install rockcraft --classic --edge    
          sudo snap install --devmode --channel edge skopeo
          sudo snap install aproxy --edge
          sudo snap set aproxy proxy=squid.internal:3128
          sudo nft -f - << EOF
          define default-ip = $(ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+')
          define private-ips = { 10.0.0.0/8, 127.0.0.1/8, 172.16.0.0/12, 192.168.0.0/16 }
          table ip aproxy
          flush table ip aproxy
          table ip aproxy {
                chain prerouting {
                      type nat hook prerouting priority dstnat; policy accept;
                      ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }

                chain output {
                      type nat hook output priority -100; policy accept;
                      ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
              }
          }
          EOF

      - name: Build image
        run: sudo make build

      - name: Get Artifact Name
        id: artifact
        run: |
          ARTIFACT=$(make help | grep 'Artifact: ')
          echo "name=${ARTIFACT#'Artifact: '}" >> $GITHUB_OUTPUT

      - name: Upload locally built artifact
        uses: actions/upload-artifact@v3
        with:
          name: charmed-spark
          path:  ${{ steps.artifact.outputs.name }}
