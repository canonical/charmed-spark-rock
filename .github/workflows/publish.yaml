on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
      uses: ./.github/workflows/build.yaml
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract branch metadata
        shell: bash
        run: |
          BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          echo "risk=${BRANCH##*\/}" >> $GITHUB_OUTPUT
          echo "track=${BRANCH%*\/*}" >> $GITHUB_OUTPUT
        id: branch_metadata

      - name: Install dependencies
        run: |
          sudo snap install docker
          sudo addgroup --system docker; sudo adduser $USER docker
          newgrp docker
          sudo snap disable docker; sudo snap enable docker
          
          sudo snap install yq

      - name: Check consistency between metadata and release branch
        run: |
          version=$(yq '(.version|split("-"))[0]' rockcraft.yaml)
          base=$(yq '(.base|split(":"))[1]' rockcraft.yaml)
          if [ "${version}-${base}" != "${{ steps.branch_metadata.outputs.track }}" ]; then exit 1; fi
        continue-on-error: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Get Artifact Name
        id: artifact
        run: |
          ARTIFACT=$(make help | grep 'Artifact: ')
          echo "name=${ARTIFACT#'Artifact: '}" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: charmed-spark
          path: charmed-spark

      - name: Import and push to GHCR
        run: |
          # Unpack artifact
          mv charmed-spark/${{ steps.artifact.outputs.name }} .
          rmdir charmed-spark
          
          REPOSITORY="ghcr.io/canonical/"
          
          # Import artifact into docker with new tag
          sudo make import TARGET=docker REPOSITORY=${REPOSITORY} \
            -o ${{ steps.artifact.outputs.name }} 

          RISK=${{ steps.branch_metadata.outputs.risk }}
          TRACK=${{ steps.branch_metadata.outputs.track }}
          if [ ! -z "$RISK" ]; then TAG=${TRACK}_${RISK}; else TAG=${TRACK}; fi
          IMAGE_NAME="${REPOSITORY}charmed-spark"
          echo "Publishing ${IMAGE_NAME}:${TAG}"
          
          docker push ${IMAGE_NAME}:${TAG}